priority 0

snippet io "An ugly IO template, from Real World Haskell" b
interactWith function inputFile outputFile = do
	input <- readFile inputFile
	writeFile outputFile (function input)

main = mainWith $ foo
	where mainWith function = do
			args <- getArgs
			case args of
			[a,b,c] -> interactWith (function a b c) "/dev/stdin" "/dev/stdout"
			_ -> putStrLn "error: incorrect number of arguments"
endsnippet

snippet turtle "make turtle shell template" b
#!/usr/bin/env runhaskell

{-# LANGUAGE OverloadedStrings #-}

import Turtle

main = do
	echo "Hello Turtle!"
endsnippet

snippet module "Default header" b
module `!p snip.rv = "{}".format(snip.basename)`
(
	`!p snip.rv = "{}".format(snip.basename)`(..)${0}
) where
endsnippet

snippet class "Class template" b
class ${1:Name} a where
	${2:`!p snip.rv = t[1][0].lower() + t[1][1::]`} :: ${3:def}${0}
endsnippet

snippet instance "Instance template" b
instance ${1:Name} ${2:`!p snip.rv = "%s" % snip.basename`} where
	${3:`!p snip.rv = t[1][0].lower() + t[1][1::]`} ($2 ${4:_}) = ${5:_}${0}
endsnippet
