priority 0

snippet rscript "Initialize Rscript template" b
#!/usr/bin/env Rscript

require(data.table, quiet=TRUE)
require(plyr, quiet=TRUE)

version <- '0.1'

suppressPackageStartupMessages(library("argparse"))
parser <- ArgumentParser(
	formatter_class='argparse.RawTextHelpFormatter',
	description='${1:OVERALL_DESCRIPTION}',
	usage='${2:PROGRAM_NAME} [options]')

parser$add_argument(
	'-v', '--version',
	action='store_true',
	default=FALSE)

# parser$add_argument(
#   '-f', '--files',
#   metavar="x",
#   help='tabular files to be parsed',
#   nargs="+")

args <- parser$parse_args()

if(args$version){
	cat(sprintf('rstab v%s\n', version))
	q()
}

${0}
endsnippet

snippet addarg "Add an argparse argument" b
parser$add_argument(
	'-${1:x}' , '--${2:LONG}',
	help='${3:HELP}'
	${0}
)
endsnippet

snippet addargf "Add a flag (boolean) argparse argument" b
parser$add_argument(
	'-${1:x}' , '--${2:LONG}',
	help='${3:HELP}',
	action='store_true',
	default=FALSE
)${0}
endsnippet

snippet doxy "Doxygen template" b
#' ${1:ONE_LINE_DESCRIPTION}
#' 
#' @export
#' @param ${2:x} ${3:desc}
#' @return ${4:desc}
#' @examples
#' ${0}
endsnippet

snippet geom_bar "geom_bar tempalte" b
ggplot(aes(${1:XFACTOR}, ${2:BAR_HEIGHT})) +
	geom_bar(aes(fill=${3:DODGE_COMPONENTS}), stat='identity', position='dodge')
endsnippet

snippet geom_hist "Build default geom_histogram" b
${1:g} <- ggplot(${2:d}) +
	geom_histogram(aes(x=${3:x}, y=..density..)) +
	ggtitle('${4:title}') +
	xlab('${5:xlab}') +
	facet_wrap(~${6:group})
	${0}
endsnippet

snippet geom_boxplot "Build default geom_boxplot" b
${1:g} <- ggplot(${2:d}) +
	geom_boxplot(aes(x=${3:x}, y=${4:y}), width=0.2) +
	geom_violin(aes(x=$3, y=$4), alpha=0.3) +
	ggtitle('${5:title}') +
	xlab('${6:xlab}') +
	ylab('${7:xlab}')
	${0}
endsnippet

snippet geom_point "Build default geom_point" b
${1:g} <- ggplot(${2:d}) +
	geom_point(aes(x=${3:x}, y=${4:y})) +
	ggtitle('${5:title}') +
	xlab('${6:xlab}') +
	ylab('${7:xlab}')
	${0}
endsnippet

snippet logy "ggplot2 logy trans" b
require(scales)
scale_y_continuous(
	trans='log2',
	breaks=trans_breaks('log2', function(x) round(2^x))
)
endsnippet

snippet logx "ggplot2 logx trans" b
require(scales)
scale_x_continuous(
	trans='log2',
	breaks=trans_breaks('log2', function(x) round(2^x))
)
endsnippet

snippet slant270 "Make vertical ggplot x-axis labels" b
theme(
	axis.text.x = element_text(angle=270, hjust=0, vjust=1)
)
endsnippet

snippet rcpp "rcpp template" b
include(Rcpp)

sourceCpp("${1:source.cpp}")

endsnippet
