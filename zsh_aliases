alias parallel='parallel --gnu'
alias ltree='tree -C | less -R'
alias rmblastdb='rm *.{nhr,nin,nsq,phr,pin,psq} 2> /dev/null'
alias csa='git commit -S -m '
alias cpan='perl -MCPAN -e shell'
alias R='R --vanilla --quiet'
alias seg='segmasker -outfmt fasta'
alias x='exit'

# Parallel zipping/unzipping functions
pgzip()    { ls $@ | xargs -P 0 -n 1 gzip;    }
pbzip2()   { ls $@ | xargs -P 0 -n 1 bzip2;   }
pgunzip()  { ls $@ | xargs -P 0 -n 1 gunzip;  }
pbunzip2() { ls $@ | xargs -P 0 -n 1 bunzip2; }

cds() {
    cd "$1"
    ls
    pwd
}

rmtexjunk() {
    if [ -f ${1}.tex ]; then
        for j in aux bbl blg lof log out toc fdb_latexmk pdf dvi; do
            rm "${1}.$j" 2> /dev/null
        done
    else
        echo "Please provide tex base filename"
        return 1
    fi
}

# Shred files
annihilate() {
    for j in $@
    do
        shred -fuzn 1 $j
    done
}

# general opener (adapt as necessary)
sesame() {
    for j in $@
    do
        gnome-open $j
    done
}


ma() {
    for j in `ls *{mp3,wav,flac}`
    do
        mplayer $j
    done
}

gccp() {
    g++ -ansi -pedantic-errors -Wall $1 $2 $3
}

damn() {
    for j in $@;
    do
        mv -f $j ~/.local/share/Trash/files
    done
}

unjar() {
    for j in $@
    do 
        current_directory=$PWD
        jar_dir=`echo $j | sed -e 's/\.jar$//'`
        mkdir $jar_dir
        mv $j $jar_dir
        cd $jar_dir
        jar -xvf $j
        mv $current_directory/$jar_dir/$j $current_directory
        cd $current_directory
    done
}
